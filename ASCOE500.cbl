00001  IDENTIFICATION DIVISION.
00002  PROGRAM-ID.    ASCOE500.
00003  AUTHOR.        LIAUBA-KISTINGER.
00004  DATE-WRITTEN.  AUGUST , 1989.
00005 *
00006 * REMARKS.      THIS PROGRAM CREATES THE ASSESSOR'S
00007 *             CERTIFICATE OF ERROR REPORT WORKFILE.
00008 *    PROGRAM MODIFIED AUGUST, 2000 BY R.CRUZ.
00009 *    PROGRAM MODIFIED MARCH , 2002 BY J.SHALVIS.
00010 *        ACCESS EXMPTSEG & CREATE NEW OUTPUT RECORD FORMAT.
00011      SKIP2
00012  ENVIRONMENT DIVISION.
00013  CONFIGURATION SECTION.
00014  SOURCE-COMPUTER. IBM-370.
00015  OBJECT-COMPUTER. IBM-370.
00016      SKIP1
00017  INPUT-OUTPUT SECTION.
00018  FILE-CONTROL.
00019      SELECT ASCOEWRK  ASSIGN TO UT-S-ASCOEWRK.
00020      SELECT CONTROL-CARD  ASSIGN TO UT-S-CONTCARD.
00021      SKIP2
00022  DATA DIVISION.
00023  FILE SECTION.
00024      SKIP1
00025  COPY ASCOEWRKF1.
00026      SKIP1
00027      EJECT
00028  FD  CONTROL-CARD
00029      RECORDING MODE IS F
00030      RECORD CONTAINS 80 CHARACTERS
00031      BLOCK CONTAINS 0 RECORDS
00032      LABEL RECORDS ARE STANDARD
00033      DATA RECORD IS CARD-YEAR.
00034  01  CARD-YEAR.
00035      05  CC-LIT              PIC X(4).
00036          88 CC-VALID-LIT                  VALUE 'TXYR'.
00037      05  CC-YEAR    OCCURS 15 TIMES
00038                              PIC XX.
00039      05  FILLER              PIC X(46).
00040      EJECT
00041  WORKING-STORAGE SECTION.
00042  77  DSP-CNT                 PIC S9(7)   COMP-3  VALUE +0.
00043  77  LIM-CNT                 PIC S9(7)   COMP-3  VALUE +099999.
00044  77  END-PROCESSING-SW       PIC X       VALUE 'N'.
00045  77  CARD-EOF-SW             PIC X       VALUE 'N'.
00046  77  ALL-ASSMTSEG-SW         PIC X       VALUE 'N'.
00047  77  ALL-COFESEG-SW          PIC X       VALUE 'N'.
00048  77  ALL-DATASEG-SW          PIC X       VALUE 'N'.
00049  77  SELECT-SW               PIC X       VALUE 'N'.
00050  77  EARLIEST-YEAR           PIC XX      VALUE ZEROES.
00051  77  ERR-COND-SW             PIC X       VALUE 'N'.
00052      SKIP1
00053  77  CTR-DISPLAY             PIC ZZ,ZZZ,ZZ9.
00054      SKIP1
00055  77  SUBX                    PIC S9(4) BINARY   VALUE +0.
00056  77  HO-SEGMENT-SW           PIC X       VALUE 'N'.
00057      88  HO-SEGMENT                      VALUE 'Y'.
00058  77  TSUB                    PIC S9(4) BINARY   VALUE +0.
00059      88  TABLE-EXCEEDED                         VALUE +51.
00060      88  VALID-NUM-OF-SEGS                    VALUE +1 THRU +50.
00061  77  SUB                     PIC S9(4) BINARY   VALUE +0.
00062  77  CHECK-PROP              PIC S9(4).
00063      88  VALID-PROP          VALUE +9000 THRU +9999.
00064      SKIP1
00065  01  WORK-AREAS.
00066      SKIP1
00067      05 EARLIEST-YEAR-CC.
00068         10 E-YEAR-CC      PIC 99.
00069         10 E-YEAR         PIC 99.
00070      05 PY-YEAR-CC.
00071         10 P-YEAR-CC      PIC 99.
00072         10 P-YEAR         PIC 99.
00073      05 UNPACK-PROP.
00074         10 UNPK-FIRST-ELEVEN PIC 9(11).
00075         10 UNPK-LAST-FOUR PIC 9(04).
00076      05 UNPACK-PROP-R  REDEFINES UNPACK-PROP PIC 9(15).
00077      05 PACK-TOWN.
00078         10 TOWN-NO-N         PIC 99.
00079      SKIP1
00080  01  PACKED-DECIMAL-VARIABLES            PACKED-DECIMAL.
00081      05  CHKP-CTR            PIC S99999  VALUE +0.
00082      05  PROPSEG-CTR         PIC S9(9)   VALUE +0.
00083      05  ASSMTSEG-CTR        PIC S9(9)   VALUE +0.
00084      05  EXMPTSEG-CTR        PIC S9(9)   VALUE +0.
00085      05  COFESEG-CTR         PIC S9(9)   VALUE +0.
00086      05  DATASEG-CTR         PIC S9(9)   VALUE +0.
00087      05  OUT-CNT             PIC S9(9)   VALUE +0.
00088      SKIP2
00089  COPY IMSCALLS.
00090      SKIP2
00091  01  IO-AREAS.
00092  COPY PIROOTSEGM.
00093      SKIP1
00094  COPY PIASSESSMT.
00095      SKIP1
00096  COPY ASAIS135SG.
00097      SKIP1
00098  01  COFE-DATA-IO.
00099  COPY ASAIS140SG.
00100      SKIP1
00101  COPY PIHOMEOWNR.
00102      SKIP1
00103  COPY ASAISSSA09.
00104      SKIP2
00105  COPY PIALLS2SSA.
00106      SKIP2
00107  LINKAGE SECTION.
00108  COPY IOPCBDESC.
00109      SKIP1
00110  01  PI-PCB.
00111  COPY PIPCB1DESC.
00112          10  PI-RACOED-KEY    PIC X(28).
00113      SKIP2
00114  PROCEDURE DIVISION.
00115  A000-HOUSEKEEPING.
00116      ENTRY 'DLITCBL' USING IO-PCB
00117                            PI-PCB.
00118      OPEN INPUT CONTROL-CARD.
00119      PERFORM G010-PARM-EDITS
00120      IF ERR-COND-SW = 'Y'
00121         MOVE 16 TO RETURN-CODE
00122         CLOSE CONTROL-CARD
00123         GOBACK.
00124      SKIP1
00125      OPEN OUTPUT ASCOEWRK.
00126      PERFORM A010-MAINLINE UNTIL
00127           END-PROCESSING-SW = 'Y'.
00128      CLOSE ASCOEWRK, CONTROL-CARD.
00129      PERFORM H010-DISPLAY-CTRS.
00130      GOBACK.
00131      SKIP2
00132  A010-MAINLINE.
00133      PERFORM B010-GN-PROPSEG.
00134      IF END-PROCESSING-SW NOT = 'Y'
00135         IF PI-STATUS-CODE = SPACE
00136            MOVE 'N' TO ALL-ASSMTSEG-SW
00137            PERFORM B020-GET-ASSMTSEG UNTIL
00138                ALL-ASSMTSEG-SW = 'Y'  OR ERR-COND-SW = 'Y'.
00139 *    IF PROPSEG-CTR > 5000
00140 *       MOVE 'Y'  TO END-PROCESSING-SW.
00141      SKIP2
00142  B010-GN-PROPSEG.
00143      CALL 'CBLTDLI' USING GN
00144                           PI-PCB
00145                           P-ROOT
00146 *                         UNQUAL-ROOT-SSA.
00147                           LVL1-UNQUAL-SSA.
00148      IF PI-STATUS-CODE = SPACE
00149         ADD +1 TO PROPSEG-CTR, DSP-CNT
00150         IF DSP-CNT GREATER THAN LIM-CNT
00151            DISPLAY 'PROPSEG PROCESSED ' PROPSEG-CTR ' ' P-PROP
00152                 UPON CONSOLE
00153            MOVE +0 TO DSP-CNT
00154         ELSE
00155            NEXT SENTENCE
00156      ELSE
00157         IF PI-STATUS-CODE = 'GB'
00158            MOVE 'Y' TO END-PROCESSING-SW
00159         ELSE
00160            DISPLAY 'ERROR IN B010-GN-PROPSEG'
00161            PERFORM X010-DISPLAY-PCB.
00162      SKIP2
00163  B020-GET-ASSMTSEG.
00164      PERFORM C010-GNP-ASSMTSEG.
00165      IF PI-STATUS-CODE = SPACE
00166         PERFORM C070-GET-EXMPTSEG
00167         MOVE SPACE TO ALL-COFESEG-SW
00168         PERFORM C020-GET-COFESEG UNTIL
00169            ALL-COFESEG-SW = 'Y' OR ERR-COND-SW = 'Y'.
00170      SKIP2
00171  C010-GNP-ASSMTSEG.
00172      MOVE P-PROP TO LVL1-ARG
00173      CALL 'CBLTDLI' USING GN
00174                           PI-PCB
00175                           PY-ASMTDATA
00176 *                         QUAL-ROOT-SSA
00177                           LVL1-QUAL-SSA
00178                           LVL2-UNQUAL-SSA.
00179 *                         UNQUAL-ASMT-SSA.
00180      IF PI-STATUS-CODE = SPACE
00181         ADD +1 TO ASSMTSEG-CTR
00182         MOVE PY-YEAR       TO P-YEAR
00183         MOVE EARLIEST-YEAR TO E-YEAR
00184         IF E-YEAR > 50
00185            MOVE 19 TO E-YEAR-CC
00186         ELSE
00187            MOVE 20 TO E-YEAR-CC
00188         END-IF
00189         IF P-YEAR > 50
00190            MOVE 19 TO P-YEAR-CC
00191         ELSE
00192            MOVE 20 TO P-YEAR-CC
00193         END-IF
00194         IF PY-YEAR-CC LESS THAN EARLIEST-YEAR-CC
00195            MOVE 'Y' TO ALL-ASSMTSEG-SW
00196         ELSE
00197            NEXT SENTENCE
00198      ELSE
00199            MOVE 'Y' TO ALL-ASSMTSEG-SW
00200         IF PI-STATUS-CODE = 'GE'
00201            MOVE 'Y' TO ALL-ASSMTSEG-SW
00202         ELSE
00203            DISPLAY 'ERROR IN C010-GNP-ASSMTSEG'
00204            PERFORM X010-DISPLAY-PCB.
00205      SKIP2
00206  C020-GET-COFESEG.
00207      PERFORM C030-GNP-COFESEG.
00208      IF PI-STATUS-CODE = SPACE
00209         MOVE SPACE TO SELECT-SW
00210         PERFORM C060-CHECK-PROCYR
00211            VARYING SUB FROM 1 BY 1
00212            UNTIL SUB GREATER THAN +15 OR
00213                  SELECT-SW = 'Y'
00214         IF SELECT-SW = 'Y'
00215            PERFORM C040-PROCESS-DATASEG.
00216      SKIP2
00217  C030-GNP-COFESEG.
00218      MOVE P-PROP TO LVL1-ARG.
00219      MOVE PY-KEY TO LVL2-ARG.
00220      CALL 'CBLTDLI' USING GNP
00221                           PI-PCB
00222                           C135-COFEID
00223 *                         LVL1-QUAL-SSA
00224 *                         LVL2-QUAL-SSA
00225                           LVL3-UNQUAL-SSA.
00226      IF PI-STATUS-CODE = SPACE
00227         ADD +1 TO COFESEG-CTR
00228      ELSE
00229         IF PI-STATUS-CODE = 'GE'
00230            MOVE 'Y' TO ALL-COFESEG-SW
00231         ELSE
00232            DISPLAY 'ERROR IN C030-GNP-COFESEG'
00233            PERFORM X010-DISPLAY-PCB.
00234      SKIP2
00235  C040-PROCESS-DATASEG.
00236      PERFORM C050-GNP-DATASEG.
00237      IF PI-STATUS-CODE = SPACE
00238          PERFORM D010-BUILD-OUTPUT-RECORD
00239          MOVE SPACE TO ALL-DATASEG-SW
00240          PERFORM D020-GET-ALL-DATASEG
00241             UNTIL ALL-DATASEG-SW = 'Y' OR
00242             C500-SEGCTR GREATER THAN 50 OR
00243             ERR-COND-SW = 'Y'
00244          IF ERR-COND-SW NOT = 'Y'
00245             PERFORM D050-WRITE-RECORD.
00246      SKIP2
00247  C050-GNP-DATASEG.
00248      MOVE P-PROP TO LVL1-ARG.
00249      MOVE PY-KEY TO LVL2-ARG.
00250      MOVE C135-COFENO TO LVL3-ARG.
00251      CALL 'CBLTDLI' USING GNP
00252                           PI-PCB
00253                           C140-COFEACTION
00254 *                         LVL1-QUAL-SSA
00255 *                         LVL2-QUAL-SSA
00256 *                         LVL3-QUAL-SSA
00257                           LVL4-UNQUAL-SSA.
00258      IF PI-STATUS-CODE= SPACE
00259         ADD +1 TO DATASEG-CTR
00260      ELSE
00261         IF PI-STATUS-CODE = 'GE'
00262            MOVE 'Y' TO ALL-DATASEG-SW
00263         ELSE
00264            DISPLAY 'ERROR IN C050-GNP-DATASEG'
00265            PERFORM X010-DISPLAY-PCB.
00266      SKIP2
00267  C060-CHECK-PROCYR.
00268      IF CC-YEAR (SUB) EQUAL SPACES
00269         MOVE +40 TO SUB
00270      ELSE
00271         IF C135-PROCYR EQUAL CC-YEAR (SUB)
00272            MOVE 'Y' TO SELECT-SW.
00273
00274  C070-GET-EXMPTSEG.
00275      MOVE 'N'  TO  HO-SEGMENT-SW.
00276      PERFORM C070-GNP-EXMPTSEG.
00277      IF PI-DB-GOOD-STATUS
00278         MOVE 'Y'  TO  HO-SEGMENT-SW
00279         ADD 1 TO EXMPTSEG-CTR
00280      ELSE
00281         IF PI-SEG-NOTFND
00282            NEXT SENTENCE
00283         ELSE
00284            DISPLAY 'ERROR IN C070-GNP-EXMPTSEG'
00285            PERFORM X010-DISPLAY-PCB.
00286
00287  C070-GNP-EXMPTSEG.
00288      MOVE P-PROP TO LVL1-ARG
00289      MOVE P-PROP TO QR-PROP
00290      MOVE PY-KEY TO LVL2-ARG
00291      MOVE PY-KEY TO ASSMT-SSA-KEY
00292      MOVE 'O'    TO QE-SEGCD
00293      CALL 'CBLTDLI' USING GNP
00294                           PI-PCB
00295                           PO-HOMEOWNR
00296                           LVL1-QUAL-SSA
00297                           LVL2-QUAL-SSA
00298 *                         QUAL-ROOT-SSA
00299 *                         QUAL-ASMT-SSA
00300                           QUAL-EXEMPT-SSA.
00301
00302
00303  D010-BUILD-OUTPUT-RECORD.
00304      MOVE +0 TO TSUB
00305      MOVE SPACES        TO ASCOEWRKREC
00306      MOVE P-TOWN        TO C500-TOWN
00307      MOVE P-VOL         TO C500-VOL
00308      MOVE P-PROP        TO C500-PROP UNPACK-PROP-R
00309      MOVE UNPK-LAST-FOUR TO CHECK-PROP
00310      MOVE PY-YEAR       TO C500-PROCYR
00311      MOVE PY-TXYR       TO C500-TXYR
00312      MOVE PY-TXTYPE     TO C500-TXTYP
00313      MOVE P-STAT        TO C500-TXSTAT
00314      IF C135-TXTYP   EQUAL  1
00315          OR  VALID-PROP
00316          MOVE ZEROS  TO  C500-BACLS
00317      ELSE
00318         MOVE PY-BA-CLS  TO C500-BACLS.
00319      MOVE PY-AS1-ACT    TO C500-AS1ACT
00320      MOVE PY-AS2-ACT    TO C500-AS2ACT
00321      MOVE PY-BA-ACT     TO C500-BAACT
00322      MOVE PY-BA-LANDVAL TO C500-BALAND
00323      MOVE PY-BA-IMPRVAL TO C500-BAIMP
00324      MOVE PY-BA-TOTLVAL TO C500-BATOT
00325      MOVE C135-COFENO   TO C500-BACERTNO
00326      MOVE C135-ISSDTE   TO C500-ISSDTE
00327      MOVE C135-CTLNUM   TO C500-CTLNUM
00328      MOVE C135-ISSDBY   TO C500-ISSBY
00329
00330      IF HO-SEGMENT
00331         MOVE PO-OCCFAC  TO C500-OCCFAC
00332         MOVE PO-PROFCTR TO C500-PROFCTR
00333         MOVE PO-EQVAL   TO C500-EQVAL
00334      ELSE
00335 *       DISPLAY 'NO HOME OWNER SEGMENT FOR PIN ' P-PROP
00336 *               '  PY-YEAR ' PY-YEAR '  PY-TXYR ' PY-TXYR
00337         MOVE ZEROES     TO C500-OCCFAC
00338                            C500-PROFCTR
00339                            C500-EQVAL
00340      END-IF
00341
00342      MOVE ZEROS         TO C500-SEGCTR
00343      ADD +1 TO TSUB  C500-SEGCTR
00344      MOVE C140-COFEACTION TO C500-COFEACTION (TSUB)
00345      MOVE C140-ISS-DTE   TO C500-ISSUE-DTE (TSUB)
00346      MOVE C140-TRCK-DATE TO C500-TRCK-DATE (TSUB)
00347      MOVE ZEROS          TO C500-RLT-VALUE (TSUB)
00348      MOVE ZEROS          TO C500-CLT-VALUE (TSUB)
00349 *    MOVE C140-WCADDR    TO C500-WCADDR (TSUB)
00350      MOVE C140-CHOBASE   TO C500-CHOBASE(TSUB)
00351      MOVE C140-TRS-TRKDTE TO C500-TRS-TRKDTE(TSUB)
00352      MOVE C140-CDISEXM   TO C500-CDISEXM (TSUB)
00353      MOVE C140-RDISEXM   TO C500-RDISEXM (TSUB)
00354      MOVE C140-WCCITY    TO C500-WCCITY (TSUB)
00355      MOVE C140-CSF-RESP  TO C500-CSF-RESP (TSUB)
00356      MOVE ZEROS          TO C500-CLANDVAL (TSUB)
00357                             C500-CBLDGVAL (TSUB)
00358                             C500-RLANDVAL (TSUB)
00359                             C500-RBLDGVAL (TSUB)
00360                             C500-CSF-VALUE (TSUB)
00361                             C500-INT-DTE (TSUB)
00362                             C500-CHK-DATE (TSUB)
00363                             C500-CHK-NO (TSUB)
00364      MOVE C140-CSF-RESP  TO C500-CSF-RESP (TSUB)
00365      MOVE C140-INTEREST  TO C500-INT-AMT (TSUB)
00366      MOVE C140-RFND      TO C500-RFND (TSUB)
00367      MOVE C140-CHOPRO    TO C500-CHOPRO (TSUB)
00368      MOVE C140-CHOCOOPQTY  TO C500-CHOCOOPQTY (TSUB)
00369      MOVE C140-CHOOCCFAC   TO C500-CHOOCCFAC (TSUB)
00370      MOVE C140-CHO-RESP    TO C500-CHO-RESP (TSUB)
00371      MOVE C140-CHS-RESP    TO C500-CHS-RESP (TSUB)
00372      MOVE ZEROS            TO C500-WCZIP (TSUB).
00373      SKIP2
00374  D020-GET-ALL-DATASEG.
00375      PERFORM C050-GNP-DATASEG.
00376      IF PI-STATUS-CODE = SPACE
00377           ADD +1 TO TSUB, C500-SEGCTR
00378           IF TSUB GREATER THAN +50
00379              DISPLAY 'DATA SEG TABLE IS FULL MAX IS 50 RECORDS'
00380              DISPLAY 'PROPERTY NUMBER IS  ' P-PROP
00381              DISPLAY '     TAXTYPE    IS  ' C135-TXTYP
00382              DISPLAY '     TAXYEAR    IS  ' C135-TXYR
00383              MOVE 16 TO RETURN-CODE
00384              MOVE 'Y' TO ERR-COND-SW
00385           ELSE
00386              MOVE C140-COFEACTION TO C500-COFEACTION (TSUB)
00387              MOVE C140-ISS-DTE    TO C500-ISSUE-DTE (TSUB)
00388              MOVE C140-TRCK-DATE  TO C500-TRCK-DATE (TSUB)
00389              MOVE ZEROS          TO C500-RLT-VALUE (TSUB)
00390              MOVE ZEROS          TO C500-CLT-VALUE (TSUB)
00391              MOVE C140-WCADDR    TO C500-WCADDR (TSUB)
00392              MOVE C140-WCCITY    TO C500-WCCITY (TSUB)
00393              MOVE C140-CSF-RESP  TO C500-CSF-RESP (TSUB)
00394              MOVE ZEROS           TO C500-CLANDVAL (TSUB)
00395              MOVE ZEROS           TO C500-CBLDGVAL (TSUB)
00396              MOVE ZEROS           TO C500-RLANDVAL (TSUB)
00397              MOVE ZEROS           TO C500-RBLDGVAL (TSUB)
00398              MOVE ZEROS           TO C500-CSF-VALUE (TSUB)
00399              MOVE ZEROS           TO C500-INT-DTE  (TSUB)
00400              MOVE ZEROS           TO C500-CHK-DATE (TSUB)
00401              MOVE ZEROS           TO C500-CHK-NO (TSUB)
00402              MOVE C140-CSF-RESP   TO C500-CSF-RESP (TSUB)
00403              MOVE C140-INTEREST   TO C500-INT-AMT (TSUB)
00404              MOVE C140-RFND       TO C500-RFND (TSUB)
00405              MOVE C140-CHOPRO     TO C500-CHOPRO (TSUB)
00406              MOVE C140-CHOCOOPQTY TO C500-CHOCOOPQTY (TSUB)
00407              MOVE C140-CHOOCCFAC  TO C500-CHOOCCFAC (TSUB)
00408              MOVE C140-CHO-RESP   TO C500-CHO-RESP (TSUB)
00409              MOVE C140-CHS-RESP   TO C500-CHS-RESP (TSUB)
00410              MOVE ZEROS            TO C500-WCZIP (TSUB).
00411      SKIP2
00412  D050-WRITE-RECORD.
00413      WRITE  ASCOEWRKREC
00414      ADD +1 TO  OUT-CNT.
00415      SKIP2
00416  G010-PARM-EDITS.
00417      PERFORM G020-READ-CARD-FILE.
00418      SKIP1
00419      IF CARD-EOF-SW NOT = 'Y'
00420         PERFORM G030-EDIT-CARD
00421      ELSE
00422         DISPLAY 'CONTROL CARD   IS MISSING'
00423         MOVE 'Y' TO ERR-COND-SW.
00424         SKIP1
00425  G020-READ-CARD-FILE.
00426      READ CONTROL-CARD AT END
00427          MOVE 'Y' TO CARD-EOF-SW.
00428      SKIP2
00429  G030-EDIT-CARD.
00430      IF NOT CC-VALID-LIT
00431         MOVE 'Y' TO ERR-COND-SW
00432         DISPLAY 'CONTROL CARD   - POSITIONS 1-4 MUST BE EQUAL TO
00433 -               'TXYR' CC-LIT.
00434       SKIP1
00435      PERFORM G040-EDIT-TXYR-CARD
00436             VARYING SUB FROM 1 BY 1
00437             UNTIL SUB GREATER THAN 15.
00438      SKIP1
00439      DISPLAY 'CONTROL CARD   ' CARD-YEAR.
00440             SKIP2
00441  G040-EDIT-TXYR-CARD.
00442      IF SUB EQUAL 1
00443         MOVE CC-YEAR (1) TO EARLIEST-YEAR
00444         IF CC-YEAR (1) IS NOT NUMERIC
00445            MOVE 'Y' TO ERR-COND-SW
00446            DISPLAY 'CONTROL CARD   - POSITIONS 5-6 MUST BE EQUAL
00447 -                  'TO NUMERIC VALUE        ' CC-YEAR (1)
00448            MOVE +40 TO SUB
00449         ELSE
00450            NEXT SENTENCE
00451      ELSE
00452         IF CC-YEAR (SUB) EQUAL SPACES
00453            MOVE +40 TO SUB
00454         ELSE
00455            COMPUTE SUBX EQUAL SUB - 1
00456            IF CC-YEAR (SUB) NOT NUMERIC
00457 *            OR
00458 *             CC-YEAR (SUB) NOT GREATER CC-YEAR (SUBX)
00459               MOVE 'Y' TO ERR-COND-SW
00460               DISPLAY 'CONTROL CARD   - POSITIONS 7-34 MUST BE EQ
00461 -                     'UAL TO SPACES OR NUMERIC                 '
00462 *-                     'E AND IN ASCENDING SEQUENCE'
00463               DISPLAY 'CURRENT YEAR ' CC-YEAR (SUB)
00464 *-                     'PRIOR YEAR ' CC-YEAR (SUBX)
00465               MOVE +40 TO SUB.
00466      SKIP2
00467  H010-DISPLAY-CTRS.
00468      MOVE PROPSEG-CTR   TO CTR-DISPLAY
00469      DISPLAY 'PROPSEG READ    ' CTR-DISPLAY
00470      MOVE ASSMTSEG-CTR  TO CTR-DISPLAY
00471      DISPLAY 'ASSMTSEG READ   ' CTR-DISPLAY
00472      MOVE EXMPTSEG-CTR  TO CTR-DISPLAY
00473      DISPLAY 'EXMPTSEG READ   ' CTR-DISPLAY
00474      MOVE COFESEG-CTR   TO CTR-DISPLAY
00475      DISPLAY 'COFESEG  READ   ' CTR-DISPLAY
00476      MOVE DATASEG-CTR   TO CTR-DISPLAY
00477      DISPLAY 'DATASEG  READ   ' CTR-DISPLAY
00478      MOVE OUT-CNT          TO CTR-DISPLAY
00479      DISPLAY 'OUTPUT RECORDS  ' CTR-DISPLAY.
00480      SKIP2
00481  X010-DISPLAY-PCB.
00482      MOVE 'Y' TO ERR-COND-SW, END-PROCESSING-SW.
00483      MOVE +16 TO RETURN-CODE
00484      DISPLAY SPACE
00485      DISPLAY 'DBD NAME.......................:  '  PI-DBD-NAME
00486      DISPLAY 'SEGMENT LEVEL..................:  '  PI-SEGMENT-LVL
00487      DISPLAY 'STATUS CODE....................:  '  PI-STATUS-CODE
00488      DISPLAY 'PROCESSING OPTIONS.............:  '  PI-PROC-OPT
00489      DISPLAY 'SEGMENT NAME...................:  '  PI-NAME-FDBK
00490      DISPLAY 'LENGTH OF THE KEY FEED-BACKAREA:  '  PI-KEY-FDBK-LNG
00491      DISPLAY 'NUMBER OF SENSITIVE SEGMENTS...:  '  PI-SEN-SEG
00492      DISPLAY 'KEY-FEEDBACK AREA..............:  '  PI-KEY-FDBK.
